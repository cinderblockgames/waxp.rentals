@page
@model IndexModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
  var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

<!DOCTYPE html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]><html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]><html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js">
<!--<![endif]-->
<head>
  <meta charset="utf-8">
  <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
  <title>Rent WAX for BAN :: waxp.rentals</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width">
  <!--
  Circle Template
  http://www.templatemo.com/tm-410-circle
  -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800" rel="stylesheet">

  <link rel="stylesheet" href="css/bootstrap.min.css">
  <link rel="stylesheet" href="css/normalize.min.css">
  <link rel="stylesheet" href="css/font-awesome.min.css">
  <link rel="stylesheet" href="css/animate.css">
  <link rel="stylesheet" href="css/templatemo_misc.css">
  <link rel="stylesheet" href="css/templatemo_style.css">
  <link rel="stylesheet" href="css/site.css">

  <link rel="icon" type="image/svg+xml" href="images/favicon/favicon.svg">
  <link rel="icon" type="image/png" href="images/favicon/favicon.png">

  <script src="js/vendor/modernizr-2.6.2.min.js"></script>
  <!-- templatemo 410 circle -->
</head>
<body>
  <!--[if lt IE 7]>
  <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">activate Google Chrome Frame</a> to improve your experience.</p>
  <![endif]-->

  <div class="bg-overlay"></div>

  <div class="container-fluid">
    <div class="row">

      <div class="site-alert" style="display: none;">
        <div class="message"></div>
        <div class="spacing mobile-show"></div>
      </div>

      <div class="col-md-4 col-sm-12">
        <div class="sidebar-menu">

          <div class="logo-wrapper">
            <h1 class="logo">
              <a href="/">
                <img src="images/crypto/ban_1waxf5j83w7eqqz3kph7u843wh3p5ddf1n48rh4i9m41zhk9nnquzwbnz9pb.svg" alt="monKey" height="70">
                <span>waxp.rentals</span>
              </a>
            </h1>
          </div> <!-- /.logo-wrapper -->

          <div class="menu-wrapper">
            <ul class="menu">
              <li><a class="show-0" href="#">Rent WAX</a></li>
              <li><a class="show-1" href="#">Sell WAX</a></li>
              <li><a class="show-2" href="#">Get Banano</a></li>
              <li><a class="show-3" href="#">My Rentals</a></li>
              <li><a class="show-4" href="#">Recent Transactions</a></li>
              <li><a class="show-5" href="#">New Wallet</a></li>
            </ul> <!-- /.menu -->
            <a href="#" class="toggle-menu"><i class="fa fa-bars"></i></a>
          </div> <!-- /.menu-wrapper -->
          <!--Arrow Navigation-->
          <a id="prevslide" class="load-item"><i class="fa fa-angle-left"></i></a>
          <a id="nextslide" class="load-item"><i class="fa fa-angle-right"></i></a>

        </div> <!-- /.sidebar-menu -->
      </div> <!-- /.col-md-4 -->

      <div class="col-md-8 col-sm-12">

        <div id="menu-container">

          <div id="menu-0" class="content">
            <div class="row">

              <div class="col-md-12">
                <div class="toggle-content text-center spacing">
                  <h3>Rent WAX</h3>
                  <p>
                    <strong>Stake CPU and NET to your WAX account for {{ state.waxRentPriceInBanano }} BAN per WAX per day.</strong>
                    <br><br>Currently staked: <strong>{{ state.waxBalanceStaked }}</strong> WAX | Available: <strong>{{ state.waxBalanceAvailable }}</strong> WAX
                    <span v-if="state.waxBalanceUnstaking > 0"><br>Available tomorrow: <strong>+{{ state.waxBalanceUnstaking }}</strong> WAX</span>
                  </p>
                </div>
              </div> <!-- /.col-md-12 -->

              <div class="col-md-12">
                <div class="contact-form">
                  <div class="row">
                    <form id="open-rental" action="/" method="post">
                      <fieldset class="col-md-3">
                        <input type="text" name="account" id="account" minlength="1" maxlength="12" pattern="@WaxRentals.Waxp.Config.Constants.Protocol.WaxAddressRegex" placeholder="WAX Account" required>
                      </fieldset>
                      <fieldset class="col-md-3">
                        <input type="number" name="cpu" id="cpu" min="0" :max="state.waxMaximumRent" step="1" placeholder="# CPU">
                      </fieldset>
                      <fieldset class="col-md-3">
                        <input type="number" name="net" id="net" min="0" :max="state.waxMaximumRent" step="1" placeholder="# NET">
                      </fieldset>
                      <fieldset class="col-md-3">
                        <input type="number" name="days" id="days" min="1" step="1" placeholder="# Days" required>
                      </fieldset>
                      <fieldset class="col-md-12">
                        <input class="button" type="submit" name="open" id="open" value="Start Staking" @@click.prevent="submit">
                      </fieldset>
                    </form>
                  </div> <!-- /.row -->
                </div> <!-- /.contact-form -->
              </div> <!-- /.col-md-12 -->
            </div> <!-- /.row -->
          </div> <!-- /.content-->

          <div id="menu-1" class="content">
            <div class="row">

              <div class="col-md-12">
                <div class="toggle-content text-center">
                  <h3>Sell WAX</h3>
                  <p>
                    <span v-if="state.waxMaximumBuy >= state.waxMinimumBuy">
                      <img src="/qr/wax" width="150" height="150" />
                      <br><br>Want to sell your WAX for BAN?  Send between <strong>{{ state.waxMinimumBuy }}</strong> and <strong>{{ state.waxMaximumBuy }}</strong> WAX to <strong>@WaxRentals.Waxp.Config.Constants.Protocol.Account</strong> <i class="fa fa-copy clipboard" data-copy="@WaxRentals.Waxp.Config.Constants.Protocol.Account"></i> and <strong>include your BAN address as the memo</strong>.
                    </span>
                    <span v-else><strong>Looks like we are out of BAN right now.  Check back again soon!</strong></span>
                    <br><br>WAX price: <strong>${{ state.waxPrice }}</strong> | BAN price: <strong>${{ state.bananoPrice }}</strong>
                    <br>Currently paying <strong>{{ state.waxBuyPriceInBanano }} BAN</strong> per WAX
                    <br>Balance: <strong>{{ state.bananoBalance }} BAN</strong>
                  </p>
                </div>
              </div> <!-- /.col-md-12 -->

            </div> <!-- /.row -->
          </div> <!-- /.content -->

          <div id="menu-2" class="content">
            <div class="row">

              <div class="col-md-4 col-xs-6">
                <div class="g-item">
                  <img src="images/coins/wax.png" alt="WAX">
                  <a class="overlay buy-wax" href="#">
                    <span>WAX</span>
                  </a>
                </div> <!-- /.g-item -->
              </div> <!-- /.col-md-4 -->
              <div class="col-md-4 col-xs-6">
                <div class="g-item">
                  <img src="images/coins/xno.png" alt="XNO">
                  <a rel="nofollow" class="overlay" href="https://banano.nano.trade/" target="_blank">
                    <span>XNO</span>
                  </a>
                </div> <!-- /.g-item -->
              </div> <!-- /.col-md-4 -->
              <div class="col-md-4 col-xs-6">
                <div class="g-item">
                  <img src="images/coins/moon.png" alt="MOON">
                  <a rel="nofollow" class="overlay" href="https://moon.banano.trade/" target="_blank">
                    <span>MOON</span>
                  </a>
                </div> <!-- /.g-item -->
              </div> <!-- /.col-md-4 -->
              <div class="col-md-4 col-xs-6">
                <div class="g-item">
                  <img src="images/coins/usd.png" alt="USD">
                  <a rel="nofollow" class="overlay" href="https://ban.app/" target="_blank">
                    <span>USD</span>
                  </a>
                </div> <!-- /.g-item -->
              </div> <!-- /.col-md-4 -->
              <div class="col-md-4 col-xs-6">
                <div class="g-item">
                  <img src="images/coins/euro.png" alt="EURO">
                  <a rel="nofollow" class="overlay" href="https://ban.app/" target="_blank">
                    <span>EUR</span>
                  </a>
                </div> <!-- /.g-item -->
              </div> <!-- /.col-md-4 -->

            </div> <!-- /.row -->
          </div> <!-- /.content -->

          <div id="menu-3" class="content">
            <div class="row">
              <div class="col-lg-6 mobile-show" v-if="detail">
                <div class="toggle-content text-center">
                  <h3>Pending Rental Details <a class="pull-right" href="#" @@click.prevent="detail = null"><i class="fa fa-times"></i></a></h3>
                  <p v-if="detail.loading">
                    <img class="text-center" src="/images/progress.gif" />
                  </p>
                  <p v-else>
                    <a :href="detail.link">
                      <img :src="'/qr/banano/rental/' + detail.address.full" width="150" height="150" />
                      <br>Tap to open Kalium
                    </a>
                    <br><br>Send <strong>exactly {{ detail.banano }} BAN</strong> to
                    <br><span class="banano-address"><span class="address-highlight">{{ detail.address.start }}</span>{{ detail.address.mid }}<span class="address-highlight">{{ detail.address.end }}</span></span> <i class="fa fa-copy clipboard" :data-copy="detail.address.full"></i>.
                    <br><br>CPU: {{ detail.cpu }} | NET: {{ detail.net }} | Duration: {{ detail.days }} days
                  </p>
                </div>
              </div>

              <div class="col-lg-6">
                <div class="toggle-content text-center">
                  <h3>Pending Rentals</h3>
                  <table class="table table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col"></th>
                        <th scope="col" class="text-center">Account</th>
                        <th scope="col" class="text-center mobile-hide">CPU</th>
                        <th scope="col" class="text-center mobile-hide">NET</th>
                        <th scope="col" class="text-center mobile-show">WAX</th>
                        <th scope="col" class="text-center">Duration</th>
                        <th scope="col" class="text-center">Cost</th>
                        <th scope="col"></th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="rental in pending">
                        <td class="text-center align-middle">
                          <a href="#" @@click.prevent="remove(rental)" v-if="tracked(rental.bananoAddress)">
                            <i class="fa fa-times" alt="Stop Tracking"></i>
                          </a>
                          <a href="#" @@click.prevent="add(rental)" v-else>
                            <i class="fa fa-plus" alt="Track"></i>
                          </a>
                        </td>
                        <td class="text-center align-middle">{{ rental.waxAccount }}</td>
                        <td class="text-center align-middle mobile-hide">{{ rental.cpu }} WAX</td>
                        <td class="text-center align-middle mobile-hide">{{ rental.net }} WAX</td>
                        <td class="text-center align-middle mobile-show">{{ rental.cpu }} CPU<br />{{ rental.net }} NET</td>
                        <td class="text-center align-middle">{{ days(rental.days) }}</td>
                        <td class="text-center align-middle">{{ rental.banano }} BAN</td>
                        <td class="text-center align-middle">
                          <a :href="'/direct/ba/' + rental.bananoAddress" class="detail-link" @@click.prevent="fetchRentalDetails(rental.bananoAddress)">
                            <i class="fa fa-search-plus" alt="View"></i>
                          </a>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>

              <div class="col-lg-6 mobile-hide" v-if="detail">
                <div class="toggle-content text-center">
                  <h3>Pending Rental Details <a class="pull-right" href="#" @@click.prevent="detail = null"><i class="fa fa-times"></i></a></h3>
                  <p v-if="detail.loading">
                    <img class="text-center" src="/images/progress.gif" />
                  </p>
                  <p v-else>
                    <a :href="detail.link">
                      <img :src="'/qr/banano/rental/' + detail.address.full" width="150" height="150" />
                      <br>Tap to open Kalium
                    </a>
                    <br><br>Send <strong>exactly {{ detail.banano }} BAN</strong> to
                    <br><span class="banano-address"><span class="address-highlight">{{ detail.address.start }}</span>{{ detail.address.mid }}<span class="address-highlight">{{ detail.address.end }}</span></span> <i class="fa fa-copy clipboard" :data-copy="detail.address.full"></i>.
                    <br><br>CPU: {{ detail.cpu }} | NET: {{ detail.net }} | Duration: {{ detail.days }} days
                  </p>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-lg-6">
                <div class="toggle-content text-center">
                  <h3>Active Rentals</h3>
                  <table class="table table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col"></th>
                        <th scope="col" class="text-center">Account</th>
                        <th scope="col" class="text-center">CPU</th>
                        <th scope="col" class="text-center">NET</th>
                        <th scope="col" class="text-center">Expires</th>
                        <th scope="col"></th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="rental in active">
                        <td class="text-center align-middle">
                          <a href="#" @@click.prevent="remove(rental)" v-if="tracked(rental.bananoAddress)">
                            <i class="fa fa-times" alt="Stop Tracking"></i>
                          </a>
                          <a href="#" @@click.prevent="add(rental)" v-else>
                            <i class="fa fa-plus" alt="Track"></i>
                          </a>
                        </td>
                        <td class="text-center align-middle">{{ rental.waxAccount }}</td>
                        <td class="text-center align-middle">{{ rental.cpu }} WAX</td>
                        <td class="text-center align-middle">{{ rental.net }} WAX</td>
                        <td class="text-center align-middle">{{ localize(rental.expires) }}</td>
                        <td class="text-center align-middle">
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="rental.stakeTransaction" v-if="rental.stakeTransaction"></i>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>

              <div class="col-lg-6">
                <div class="toggle-content text-center">
                  <h3>Expired Rentals</h3>
                  <table class="table table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col"></th>
                        <th scope="col" class="text-center">Account</th>
                        <th scope="col" class="text-center">WAX</th>
                        <th scope="col" class="text-center">Opened</th>
                        <th scope="col" class="text-center">Expired</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="rental in expired">
                        <td class="text-center align-middle">
                          <a href="#" @@click.prevent="remove(rental)" v-if="tracked(rental.bananoAddress)">
                            <i class="fa fa-times" alt="Stop Tracking"></i>
                          </a>
                          <a href="#" @@click.prevent="add(rental)" v-else>
                            <i class="fa fa-plus" alt="Track"></i>
                          </a>
                        </td>
                        <td class="text-center align-middle">{{ rental.waxAccount }}</td>
                        <td class="text-center align-middle">{{ rental.cpu + rental.net }} WAX</td>
                        <td class="text-center align-middle">
                          {{ localize(rental.paid) }}
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="rental.stakeTransaction" v-if="rental.stakeTransaction"></i>
                        </td>
                        <td class="text-center align-middle">
                          {{ localize(rental.expires) }}
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="rental.unstakeTransaction" v-if="rental.unstakeTransaction"></i>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div> <!-- /.content -->

          <div id="menu-4" class="content">
            <div class="row">

              <div class="col-md-6">
                <div class="toggle-content text-center spacing">
                  <h3>Recent Wax Rentals</h3>
                  <table class="table table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col" class="text-center">Staked</th>
                        <th scope="col" class="text-center">Duration</th>
                        <th scope="col" class="text-center">Cost</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="rental in recent.rentals">
                        <td class="text-center">
                          {{ rental.cpu + rental.net }} WAX
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="rental.stakeTransaction" v-if="rental.stakeTransaction"></i>
                        </td>
                        <td class="text-center">
                          {{ days(rental.days) }}
                        </td>
                        <td class="text-center">
                          {{ rental.banano }} BAN
                          <i class="fa fa-external-link banano-address-link" :data-address="rental.bananoAddress"></i>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div> <!-- /.col-md-6 -->

              <div class="col-md-6">
                <div class="toggle-content text-center spacing">
                  <h3>Recent Wax Purchases</h3>
                  <table class="table table-dark table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col" class="text-center">Received</th>
                        <th scope="col" class="text-center">Paid</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="purchase in recent.purchases">
                        <td class="text-center">
                          {{ purchase.wax }} WAX
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="purchase.waxTransaction" v-if="purchase.waxTransaction"></i>
                        </td>
                        <td class="text-center">
                          {{ purchase.banano }} BAN
                          <i class="fa fa-external-link banano-transaction-link" :data-hash="purchase.bananoTransaction" v-if="purchase.bananoTransaction"></i>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div> <!-- /.col-md-6 -->

              <div class="col-md-6">
                <div class="toggle-content text-center spacing">
                  <h3>Recent Welcome Packages</h3>
                  <table class="table table-dark table-striped table-sm">
                    <thead>
                      <tr>
                        <th scope="col" class="text-center">Received</th>
                        <th scope="col" class="text-center">Sent</th>
                        <th scope="col" class="text-center">NFT</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr v-for="package in recent.welcomePackages">
                        <td class="text-center">
                          {{ package.banano }} BAN
                          <i class="fa fa-external-link banano-address-link" :data-address="package.bananoAddress"></i>
                        </td>
                        <td class="text-center">
                          {{ package.wax }} WAX
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="package.fundTransaction" v-if="package.fundTransaction"></i>
                        </td>
                        <td class="text-center">
                          <i class="fa fa-external-link wax-transaction-link" :data-hash="package.nftTransaction" v-if="package.nftTransaction"></i>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div> <!-- /.col-md-6 -->
            </div> <!-- /.row -->
          </div> <!-- /.content -->

          <div id="menu-5" class="content">
            <div class="row">

              <div class="col-md-12" v-if="package">
                <div class="toggle-content text-center">
                  <h3>New Wallet <a class="pull-right" href="#" @@click.prevent="package = null"><i class="fa fa-times"></i></a></h3>
                  <p>
                    <a :href="package.link">
                      <img :src="'/qr/banano/welcome/' + package.address.full" width="150" height="150" />
                      <br>Tap to open Kalium
                    </a>
                    <br><br>Send <strong>exactly {{ state.bananoWelcomePackagePrice }} BAN</strong> to
                    <br><span class="banano-address"><span class="address-highlight">{{ package.address.start }}</span>{{ package.address.mid }}<span class="address-highlight">{{ package.address.end }}</span></span> <i class="fa fa-copy clipboard" :data-copy="package.address.full"></i>.
                    <br><br>Account: {{ package.account }} | Memo: {{ package.memo }}
                  </p>
                </div>
              </div> <!-- /.col-md-12 -->

              <div class="col-md-12 spacing" v-if="!package">
                <div class="toggle-content text-center">
                  <h3>New Wallet</h3>
                  <p>
                    Open a new <a rel="nofollow" href="https://all-access.wax.io/" target="_blank"><strong>WAX Cloud Wallet</strong></a>.
                    <br>We will send 5 WAX to <strong>newuser.wax</strong> for you, and we will send you a starter NFT if we have one available.
                    <br>Enter the memo below <strong>exactly</strong> as provided to you by the WAX Cloud Wallet to begin the funding process.
                    <br><br>Welcome package price: <strong>{{ state.bananoWelcomePackagePrice }} BAN</strong> | NFT: <span v-if="state.welcomePackageNftsAvailable"><strong>Available</strong> <i class="fa fa-external-link external-link" data-url="https://wax.bloks.io/account/rentwaxp4ban#nfts"></i></span><span v-else><strong>Unavailable</strong></span>
                  </p>
                </div>
              </div> <!-- /.col-md-12 -->

              <div class="col-md-12" v-if="!package">
                <div class="contact-form" v-if="state.waxBalanceAvailable >= state.waxWelcomePackageMinimumAvailable">
                  <div class="row">
                    <form id="open-welcome-package" action="/api/WelcomePackage" method="post">

                      <fieldset class="col-md-3">
                        <input type="text" name="memo" id="memo" minlength="1" maxlength="20" pattern="@WaxRentals.Waxp.Config.Constants.Protocol.NewUserMemoRegex" placeholder="Memo" required>
                      </fieldset>

                      <fieldset class="col-md-12" v-if="loading">
                        <img class="text-center" src="/images/progress.gif" />
                      </fieldset>
                      <fieldset class="col-md-12" v-else>
                        <input class="button" type="submit" name="open-welcome-package" id="open-welcome-package" value="Open Account" @@click.prevent="submit">
                      </fieldset>

                    </form>
                  </div> <!-- /.row -->
                </div> <!-- /.contact-form -->

                <div class="toggle-content text-center" v-else>
                  <p><strong>Looks like we are out of welcome packages right now.  Check back again soon!</strong></p>
                </div>
              </div> <!-- /.col-md-12 -->

            </div> <!-- /.row -->
          </div> <!-- /.content -->

        </div> <!-- /#menu-container -->

      </div> <!-- /.col-md-8 -->

    </div> <!-- /.row -->
  </div> <!-- /.container-fluid -->

  <div class="container-fluid">
    <div class="row">
      <div class="col-md-12 footer">
        <p id="footer-text">
          <a href="https://discord.gg/Wu5ge663mG" target="_blank">Need support?  Join the discord.</a>
          <div id="error-alert" class="alert alert-danger">
            <strong id="error-alert-text"></strong>
          </div>
        </p>
      </div><!-- /.footer -->
    </div>
  </div> <!-- /.container-fluid -->

  <script src="js/vendor/jquery-1.10.1.min.js"></script>
  <script>window.jQuery || document.write('<script src="js/vendor/jquery-1.10.1.min.js"><\/script>')</script>
  <script src="js/jquery.easing-1.3.js"></script>
  <script src="js/bootstrap.js"></script>
  <script src="js/plugins.js"></script>
  <script src="js/vendor/signalr.min.js"></script>
  <script src="js/vendor/vue.min.js"></script>
  <script src="js/vendor/axios.min.js"></script>
  <script src="js/main.js"></script>
  <script src="js/site.js"></script>
  <script src="js/formatting.js"></script>
  <script type="text/javascript">
    jQuery(function ($) {

      $.supersized({

        // Functionality
        slide_interval: 3000, // Length between transitions
        transition: 1, // 0-None, 1-Fade, 2-Slide Top, 3-Slide Right, 4-Slide Bottom, 5-Slide Left, 6-Carousel Right, 7-Carousel Left
        transition_speed: 700, // Speed of transition

        // Components
        slide_links: 'blank', // Individual links for each slide (Options: false, 'num', 'name', 'blank')
        slides: [ // Slideshow Images
          {
            image: 'images/backgrounds/monkeys-4661232_1920.jpg'
          }, {
            image: 'images/backgrounds/monkeys-4999618_1920.jpg'
          }, {
            image: 'images/backgrounds/long-tailed-macaque-4501435_1920.jpg'
          }
        ]

      });

      setTimeout(() => load['@Model.InitialPage.Name']('@Model.InitialPage.Value'), 500);

      // ================
      //    VUE
      // ================

      const rent = new Vue({
        el: '#menu-0',
        data() {
          return {
            state: {}
          }
        },
        methods: {
          submit: function () {
            const form = document.getElementById('open-rental');
            if (form.reportValidity()) {
              const data = $(form).serializeArray();
              data[1].value = data[1].value || 0;
              data[2].value = data[2].value || 0;

              axios.post(form.action, $.param(data), { headers: { 'RequestVerificationToken': '@token' } })
                .then(response => {
                  if (response.data.success) {
                    const address = response.data.address;
                    storage.add(address);
                    $(form).trigger('reset');
                    load.details(address);
                  } else {
                    $('#error-alert-text').text(response.data.error);
                    $('#error-alert').fadeTo(1000, 500).slideUp(1000);
                  }
                });
            }
          }
        }
      });

      const sell = new Vue({
        el: '#menu-1',
        data() {
          return {
            state: {}
          }
        }
      });

      const my = load._my = new Vue({
        el: '#menu-3',
        data() {
          return {
            state: {},
            rentals: [],
            display: null,
            detail: null
          }
        },
        computed: {
          current: function () {
            return this.display ?? this.rentals;
          },
          pending: function () {
            return (this.current.New ?? []).concat(this.current.Pending ?? []);
          },
          active: function () {
            return this.current.Processed ?? [];
          },
          expired: function () {
            return this.current.Closed ?? [];
          }
        },
        methods: {
          fetchRentals: function (addresses, save) {
            axios.post('/api/myrentals', addresses, { headers: { 'RequestVerificationToken': '@token' } })
              .then(response => {
                if (save) {
                  this.rentals = response.data;
                } else {
                  this.display = response.data;
                }
              });
          },
          fetchWaxRentals: function (account) {
            axios.get('/api/myrentals/' + account)
              .then(response => this.display = response.data);
          },
          fetchRentalDetails: function (address) {
            this.detail = { loading: true };
            axios.get('/api/rentaldetails/' + address)
              .then(response => {
                this.detail = response.data;
                if (!response.data) {
                  // Refresh, since we're obviously out of sync.
                  this.fetchRentals(storage.addresses(), true);
                }
              });
          },
          days: function (days) {
            return days + (days === 1 ? ' day' : ' days');
          },
          tracked: function (address) {
            return storage.addresses().includes(address);
          },
          remove: function (rental) {
            storage.remove(rental.bananoAddress);
            var arr = this.rentals[rental.status];
            arr.splice(arr.indexOf(rental), 1);
            this.$forceUpdate();
          },
          add: function (rental) {
            storage.add(rental.bananoAddress);
            this.rentals[rental.status].push(rental);
            this.$forceUpdate();
          },
          localize: function (datetime) {
            return new Date(datetime).toLocaleString();
          }
        },
        mounted() {
          this.fetchRentals(storage.addresses(), true);
        }
      });

      const recents = new Vue({
        el: '#menu-4',
        data() {
          return {
            state: {},
            recent: {
              rentals: [],
              purchases: [],
              welcomePackages: []
            }
          }
        },
        methods: {
          days: function (days) {
            return days + (days === 1 ? ' day' : ' days');
          }
        }
      });

      const open = load._open = new Vue({
        el: '#menu-5',
        data() {
          return {
            state: {},
            loading: false,
            package: null
          }
        },
        methods: {
          submit: function () {
            const form = document.getElementById('open-welcome-package');
            if (form.reportValidity()) {
              const data = $(form).serializeArray();

              this.loading = true;
              axios.post(form.action, $.param(data), { headers: { 'RequestVerificationToken': '@token' } })
                .then(response => {
                  this.loading = false;
                  if (response.data.success) {
                    this.package = response.data.detail;
                    $(form).trigger('reset');
                  } else {
                    $('#error-alert-text').text(response.data.error);
                    $('#error-alert').fadeTo(1000, 500).slideUp(1000);
                  }
                });
            }
          }
        }
      });

      // ================
      //    NOTIFICATIONS
      // ================

      const _connection = new signalR.HubConnectionBuilder()
        .withUrl('/notifications')
        .withAutomaticReconnect()
        .build();

      _connection.start().catch(function (err) {
        return console.error(err.toString());
      });

      _connection.on("AppStateChanged", state => {
        rent.state = state;
        sell.state = state;
        my.state = state;
        recents.state = state;
        open.state = state;

        if (state.siteMessage) {
          $('.site-alert').show();
          $('.site-alert .message').text(state.siteMessage);
        } else {
          $('.site-alert').hide();
          $('.site-alert .message').text('');
        }
      });

      _connection.on("RecentsChanged", recent => {
        recents.recent = recent;
      });

    });
  </script>

</body>
</html>
